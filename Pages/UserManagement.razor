@page "/UserManagement"
@using PracaInżynierskaTomaszBaczek.Models
@using PracaInżynierskaTomaszBaczek.Interfaces
@using System.IO

@inject IHillViewerService HillViewerService

@inject IBoardpostService BoardpostService
@inject NavigationManager NavManager;

<h3>Manage your content</h3>
<div class="row">
    <div class="col">
        <div class="container">
            <h3 class="p-3 text-center">Your Hills</h3>
            <h4 class="p-3 text-center">You can manage your hills here.</h4>
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>Hill Name</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Hills is null)
                    {
                        <tr> There are no hills. ';</tr>
                    }
                    else
                    {
                        @foreach (var hill in Hills)
                        {
                            string filename = @$"{hill.HillName}";
                            string filepath = @$"Hills/{hill.guid}-{filename}";
                            <tr>
                                <td>@hill.HillName</td>
                                <td>
                                    <a class="btn btn-success" href="@filepath" download="@filename" target="_top">
                                        Download
                                    </a>
                                    <a class="btn btn-danger" role="button" @onclick="() => DeleteHill(hill.HillName, hill.guid, hill.Id)">
                                        Delete
                                    </a>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="col">
        <div class="container">
            <h3 class="p-3 text-center">Your posts</h3>
            <h4 class="p-3 text-center">You can manage your posts here</h4>
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Posts is null)
                    {
                        <tr> There are no Posts.</tr>
                    }
                    else
                    {
                        @foreach (var post in Posts)
                        {
                            string postlink = $"/Post/{post.Id}";
                            <tr>
                                <td>
                                    <NavLink class="nav-link" href=@postlink>
                                        @post.Title
                                    </NavLink>
                                </td>
                                <td>
                                    <button class="btn btn-danger" @onclick="() => DeletePost(post.Id)">Delete</button>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {

    private List<CreatedHill> Hills;
    private List<BoardPost> Posts;
    [CascadingParameter]
    private Task<AuthenticationState> _authState { get; set; }

    private AuthenticationState authState;

    protected override async Task OnInitializedAsync()
    {
        authState = await _authState;
        Hills = await ListUserHills();
        Posts = await ListUserPosts();
    }

    private Task<List<CreatedHill>> ListUserHills()
    {
        return HillViewerService.ListAll(authState.User.Identity.Name);
    }
    private Task<List<BoardPost>> ListUserPosts()
    {
        return BoardpostService.ListAll(authState.User.Identity.Name);
    }
    private void DeleteHill(string hillname, Guid guid, int Id)
    {
        File.Delete($@"{Directory.GetCurrentDirectory()}\wwwroot\Hills\{guid}-{hillname}");

        HillViewerService.DeleteHill(Id);

        NavManager.NavigateTo("/UserManagement", true);

    }
    private void DeletePost(int Id)
    {
        BoardpostService.Delete(Id);
        NavManager.NavigateTo("/UserManagement", true);
    }

}
